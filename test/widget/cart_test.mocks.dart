// Mocks generated by Mockito 5.2.0 from annotations
// in dima21_migliore_tortorelli/test/widget/cart_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i10;
import 'dart:ui' as _i7;

import 'package:cloud_firestore/cloud_firestore.dart' as _i5;
import 'package:dima21_migliore_tortorelli/models/MarketModel.dart' as _i11;
import 'package:dima21_migliore_tortorelli/providers/authentication.dart'
    as _i2;
import 'package:dima21_migliore_tortorelli/providers/cart.dart' as _i4;
import 'package:dima21_migliore_tortorelli/providers/result.dart' as _i8;
import 'package:dima21_migliore_tortorelli/providers/user_data.dart' as _i3;
import 'package:geoflutterfire/geoflutterfire.dart' as _i6;
import 'package:location/location.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeAuthenticationProvider_0 extends _i1.Fake
    implements _i2.AuthenticationProvider {}

class _FakeUserDataProvider_1 extends _i1.Fake implements _i3.UserDataProvider {
}

class _FakeCartProvider_2 extends _i1.Fake implements _i4.CartProvider {}

class _FakeFirebaseFirestore_3 extends _i1.Fake
    implements _i5.FirebaseFirestore {}

class _FakeGeoflutterfire_4 extends _i1.Fake implements _i6.Geoflutterfire {}

/// A class which mocks [CartProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockCartProvider extends _i1.Mock implements _i4.CartProvider {
  MockCartProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthenticationProvider get authenticationProvider =>
      (super.noSuchMethod(Invocation.getter(#authenticationProvider),
              returnValue: _FakeAuthenticationProvider_0())
          as _i2.AuthenticationProvider);
  @override
  set authenticationProvider(
          _i2.AuthenticationProvider? _authenticationProvider) =>
      super.noSuchMethod(
          Invocation.setter(#authenticationProvider, _authenticationProvider),
          returnValueForMissingStub: null);
  @override
  Map<String, int> get cart => (super.noSuchMethod(Invocation.getter(#cart),
      returnValue: <String, int>{}) as Map<String, int>);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  void addToCart(String? productId) =>
      super.noSuchMethod(Invocation.method(#addToCart, [productId]),
          returnValueForMissingStub: null);
  @override
  void removeFromCart(String? productId, {bool? force = false}) =>
      super.noSuchMethod(
          Invocation.method(#removeFromCart, [productId], {#force: force}),
          returnValueForMissingStub: null);
  @override
  void emptyCart() => super.noSuchMethod(Invocation.method(#emptyCart, []),
      returnValueForMissingStub: null);
  @override
  void createCart(Map<String, int>? productsList) =>
      super.noSuchMethod(Invocation.method(#createCart, [productsList]),
          returnValueForMissingStub: null);
  @override
  void addListener(_i7.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i7.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}

/// A class which mocks [ResultProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockResultProvider extends _i1.Mock implements _i8.ResultProvider {
  @override
  String get lastMessage =>
      (super.noSuchMethod(Invocation.getter(#lastMessage), returnValue: '')
          as String);
  @override
  set lastMessage(String? _lastMessage) =>
      super.noSuchMethod(Invocation.setter(#lastMessage, _lastMessage),
          returnValueForMissingStub: null);
  @override
  _i3.UserDataProvider get userDataProvider =>
      (super.noSuchMethod(Invocation.getter(#userDataProvider),
          returnValue: _FakeUserDataProvider_1()) as _i3.UserDataProvider);
  @override
  set userDataProvider(_i3.UserDataProvider? _userDataProvider) => super
      .noSuchMethod(Invocation.setter(#userDataProvider, _userDataProvider),
          returnValueForMissingStub: null);
  @override
  _i4.CartProvider get cartProvider =>
      (super.noSuchMethod(Invocation.getter(#cartProvider),
          returnValue: _FakeCartProvider_2()) as _i4.CartProvider);
  @override
  set cartProvider(_i4.CartProvider? _cartProvider) =>
      super.noSuchMethod(Invocation.setter(#cartProvider, _cartProvider),
          returnValueForMissingStub: null);
  @override
  set lastUserLocation(_i9.LocationData? _lastUserLocation) => super
      .noSuchMethod(Invocation.setter(#lastUserLocation, _lastUserLocation),
          returnValueForMissingStub: null);
  @override
  _i5.FirebaseFirestore get fireStoreInstance =>
      (super.noSuchMethod(Invocation.getter(#fireStoreInstance),
          returnValue: _FakeFirebaseFirestore_3()) as _i5.FirebaseFirestore);
  @override
  _i6.Geoflutterfire get geo => (super.noSuchMethod(Invocation.getter(#geo),
      returnValue: _FakeGeoflutterfire_4()) as _i6.Geoflutterfire);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  void update(
          {_i3.UserDataProvider? userDataProvider,
          _i4.CartProvider? cartProvider}) =>
      super.noSuchMethod(
          Invocation.method(#update, [], {
            #userDataProvider: userDataProvider,
            #cartProvider: cartProvider
          }),
          returnValueForMissingStub: null);
  @override
  _i10.Future<void> insertMarket(_i11.MarketModel? market) =>
      (super.noSuchMethod(Invocation.method(#insertMarket, [market]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i10.Future<void>);
  @override
  Map<_i11.MarketModel, Map<String, double>> getMarketProductMap(
          _i6.DistanceDocSnapshot<dynamic>? element,
          Map<String, int>? cartProducts) =>
      (super.noSuchMethod(
              Invocation.method(#getMarketProductMap, [element, cartProducts]),
              returnValue: <_i11.MarketModel, Map<String, double>>{})
          as Map<_i11.MarketModel, Map<String, double>>);
  @override
  _i10.Future<Map<_i11.MarketModel, Map<String, double>>> findResults() =>
      (super.noSuchMethod(Invocation.method(#findResults, []),
          returnValue: Future<Map<_i11.MarketModel, Map<String, double>>>.value(
              <_i11.MarketModel, Map<String, double>>{})) as _i10
          .Future<Map<_i11.MarketModel, Map<String, double>>>);
  @override
  void addListener(_i7.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i7.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
