// Mocks generated by Mockito 5.1.0 from annotations
// in dima21_migliore_tortorelli/test/pages/cart_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;
import 'dart:ui' as _i7;

import 'package:cloud_firestore/cloud_firestore.dart' as _i3;
import 'package:dima21_migliore_tortorelli/models/ProductModel.dart' as _i5;
import 'package:dima21_migliore_tortorelli/providers/authentication.dart'
    as _i2;
import 'package:dima21_migliore_tortorelli/providers/cart.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeAuthenticationProvider_0 extends _i1.Fake
    implements _i2.AuthenticationProvider {}

class _FakeFirebaseFirestore_1 extends _i1.Fake
    implements _i3.FirebaseFirestore {}

/// A class which mocks [CartProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockCartProvider extends _i1.Mock implements _i4.CartProvider {
  MockCartProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthenticationProvider get authenticationProvider =>
      (super.noSuchMethod(Invocation.getter(#authenticationProvider),
              returnValue: _FakeAuthenticationProvider_0())
          as _i2.AuthenticationProvider);
  @override
  set authenticationProvider(
          _i2.AuthenticationProvider? _authenticationProvider) =>
      super.noSuchMethod(
          Invocation.setter(#authenticationProvider, _authenticationProvider),
          returnValueForMissingStub: null);
  @override
  _i3.FirebaseFirestore get fireStore =>
      (super.noSuchMethod(Invocation.getter(#fireStore),
          returnValue: _FakeFirebaseFirestore_1()) as _i3.FirebaseFirestore);
  @override
  Map<_i5.ProductModel, int> get cart => (super.noSuchMethod(
      Invocation.getter(#cart),
      returnValue: <_i5.ProductModel, int>{}) as Map<_i5.ProductModel, int>);
  @override
  set productsUpdatesStreamSub(
          _i6.StreamSubscription<dynamic>? _productsUpdatesStreamSub) =>
      super.noSuchMethod(
          Invocation.setter(
              #productsUpdatesStreamSub, _productsUpdatesStreamSub),
          returnValueForMissingStub: null);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void update({_i2.AuthenticationProvider? authenticationProvider}) =>
      super.noSuchMethod(
          Invocation.method(
              #update, [], {#authenticationProvider: authenticationProvider}),
          returnValueForMissingStub: null);
  @override
  void addToCart(_i5.ProductModel? product) =>
      super.noSuchMethod(Invocation.method(#addToCart, [product]),
          returnValueForMissingStub: null);
  @override
  void removeFromCart(_i5.ProductModel? product, {bool? force = false}) =>
      super.noSuchMethod(
          Invocation.method(#removeFromCart, [product], {#force: force}),
          returnValueForMissingStub: null);
  @override
  void emptyCart() => super.noSuchMethod(Invocation.method(#emptyCart, []),
      returnValueForMissingStub: null);
  @override
  void addListener(_i7.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i7.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
